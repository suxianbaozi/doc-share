# -*- coding: utf8 -*-


import urllib2
from threading import Thread
import Queue 
import re
import time
import sys

baseUrl = "http://www.chemicalbook.com/ProductCASList_13_%d00_EN.htm"
viewBaseUrl = "http://www.chemicalbook.com/ProductChemicalPropertiesCB%s_EN.htm"
viewUrlList = Queue.Queue(maxsize = 0)
listUrlList = Queue.Queue(maxsize = 0)

ISOTIMEFORMAT='%Y-%m-%d %X'
total = 0
totalGot = 0

getViewThreads = {}


pIndex = 0
proxies = ['211.162.126.42:9090','219.143.207.140:3128','']




def getUrlContent(url):
    global pIndex
    proxy = proxies[pIndex]
    pIndex += 1
    if pIndex == len(proxies):
        pIndex = 0
    if proxy:
        proxy_support = urllib2.ProxyHandler({'http':'http://'+proxy})  
        opener = urllib2.build_opener(proxy_support, urllib2.HTTPHandler)
        urllib2.install_opener(opener)
        
    req = urllib2.Request(url)
    req.add_header("Referer","http://www.chemicalbook.com/")
    req.add_header("User-Agent","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.95 Safari/537.36")
    req.add_header("Cookie","ASP.NET_SessionId=j1vaqq55e5y5gu454ic3icrt")
    fp = urllib2.urlopen(req)
    content = fp.read()
    fp.close()
    return content
    

class getUrl(Thread):
    def __init__(self,tid):
        Thread.__init__(self)
        self.tid = tid
        self.wait = False
        
    def run(self):
        global total
        while True:
            if self.wait:
                #print 'thread list_',self.tid,' waiting...'
                time.sleep(20)
                self.wait = False
            
            id = listUrlList.get()
            url =  baseUrl%(id,)
            #print url
            try:
                content = getUrlContent(url)
            except:
                print 'error list auto put back',id
                listUrlList.put(id)
                return
            
            total += 1
            #print 'the ',total,'st page'
            
            if 'System busy' in content:
                listUrlList.put(id)
                time.sleep(60*60*2)
                print 'oh got some shit!'
                continue
            
            viewList = re.findall("CB(\d+)\_EN\.htm",content);
            
            for vid in viewList:
                viewUrlList.put(vid);

            if total%20==0:
                for k,thread in getViewThreads.items():
                    thread.wait = True       


class getView(Thread):
    def __init__(self,tid):
        Thread.__init__(self)
        self.tid = tid
        self.wait = False
    def run(self):
        global total
        global totalGot
        while True:
            if self.wait:
                print 'thread view_',self.tid,' waiting...'
                time.sleep(20)
                self.wait = False
            
            id = viewUrlList.get()
            viewUrl = viewBaseUrl%(id,)
            #print url
            try:
                content = getUrlContent(viewUrl)
            except:
                print 'error auto put back view'
                viewUrlList.put(id)
                continue
            
            total += 1
            #print 'the ',total,'st page'
            
            if 'System busy' in content:
                print 'get view, oh got some shit!'
                viewUrlList.put(id)
                time.sleep(60*60*2)
                continue
            #get img
            try:
                img = re.findall("CAS\\\GIF\\\(.+)\.gif",content)
                #print img
            except:
                print 'error auto put back view'
                viewUrlList.put(id)
                
            #print "Geted:",id,time.strftime( ISOTIMEFORMAT, time.localtime() )
            totalGot += 1
            if total%50==0:
                for k,thread in getViewThreads.items():
                    thread.wait = True



class Timer(Thread):
    def __init__(self):
        Thread.__init__(self)
    def run(self):
        t = 0
        while True:
            t+=1
            
            sys.stdout.write('time has passed:'+str(t)+'S===total got:'+str(totalGot)+'===total page:'+str(total))
            sys.stdout.write('\r')
            sys.stdout.flush()
            
            #print 'I am timer',t,'===total got:',totalGot,'===total page:',total
            time.sleep(1)

                  
print time.strftime( ISOTIMEFORMAT, time.localtime() )


for i in range(0,101):
    listUrlList.put(i)

for i in range(0,5):
    getViewThreads['list_'+str(i)] = getUrl(i)
    getViewThreads['list_'+str(i)].start()

#get view start...
for i in range(0,5):
    getViewThreads['view_'+str(i)] = getView(i)
    getViewThreads['view_'+str(i)].start()

print "Let's go timer:"
Timer().start()
